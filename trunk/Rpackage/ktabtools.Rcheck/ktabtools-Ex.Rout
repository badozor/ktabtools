
R version 2.15.2 (2012-10-26) -- "Trick or Treat"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "ktabtools"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('ktabtools')
Loading required package: ade4

Attaching package: 'ade4'

The following object(s) are masked from 'package:base':

    within

Loading required package: mixOmics
Loading required package: igraph0
Loading required package: rgl
Loading required package: lattice
Loading required package: pheatmap

Attaching package: 'mixOmics'

The following object(s) are masked from 'package:ade4':

    nipals, s.match, scatterutil.base, scatterutil.eti,
    scatterutil.grid

> 
> assign(".oldSearch", search(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("kRVplot")
> ### * kRVplot
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: kRVplot
> ### Title: Multiple plot representation of RV coefficients
> ### Aliases: kRVplot
> 
> ### ** Examples
> 
> require(ade4)
> require(MASS)
Loading required package: MASS
> # k-table simulation
> tab0 <- as.data.frame(expand.grid(1:10,1:5))
> row.names(tab0)<- paste("s",1:50,sep="")
> tab1 <- cbind(tab0, mvrnorm(50,mu=rnorm(5,0,1),Sigma=diag(abs(rnorm(5,0,1)))))
> tab2 <- cbind(tab0, mvrnorm(50,mu=rnorm(5,0,1),Sigma=diag(abs(rnorm(5,0,1)))))
> tab3 <- cbind(tab0, mvrnorm(50,mu=rnorm(5,0,1),Sigma=diag(abs(rnorm(5,0,1)))))
> listab <- list(tab1,tab2,tab3)
> names(listab) <- c("tab1","tab2","tab3")
> listpca <- list()
> for(i in 1:3)
+ listpca[[i]] <- dudi.pca(listab[[i]],scannf=FALSE,nf=2) 
> # construction of the K-table
> ktab1 <- ktab.list.dudi(listpca,tabnames= names(listab))
> # graphical representation 
> kRVplot(ktab1)
> 
> 
> 
> cleanEx()

detaching 'package:MASS'

> nameEx("mbpls")
> ### * mbpls
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: mbpls
> ### Title: Multi-Block Partial Least Squares (MBPLS)
> ### Aliases: mbpls mbpls.default mbpls.ktab print.mbpls
> 
> ### ** Examples
> 
> # example1: Comparison of pls and mbpls for two tables (Y and X)
> require(ade4)
> require(mixOmics)
> data(linnerud)
> X <- linnerud$exercise
> Y <- linnerud$physiological
> pls1 <- pls(X, Y, mode = "classic",ncomp=3)
> mb1 <- mbpls(list(X),Y,option="uniform",deflation="super")
> par(mfrow=c(2,2))
> plot(pls1$variates$Y[,1],mb1$U[,1])
> abline(0,1,col="red")
> plot(pls1$variates$Y[,2],mb1$U[,2])
> abline(0,1,col="red")
> plot(pls1$variates$Y[,3],mb1$U[,3])
> abline(0,1,col="red")
> 
> 
> 
> graphics::par(get("par.postscript", pos = 'CheckExEnv'))
> cleanEx()
> nameEx("predict.mbpls")
> ### * predict.mbpls
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: predict.mbpls
> ### Title: Prediction for object (s)mbpls
> ### Aliases: predict.mbpls predict.smbpls
> 
> ### ** Examples
> 
> # example1: Comparison of pls and mbpls for two tables (Y and X)
> require(ade4)
> require(mixOmics)
> data(linnerud)
> X <- linnerud$exercise
> Y <- linnerud$physiological
> pls1 <- pls(X, Y, mode = "classic",ncomp=3)
> mb1 <- mbpls(list(X),Y,option="uniform",deflation="super")
> par(mfrow=c(2,2))
> plot(pls1$variates$Y[,1],mb1$U[,1])
> abline(0,1,col="red")
> plot(pls1$variates$Y[,2],mb1$U[,2])
> abline(0,1,col="red")
> plot(pls1$variates$Y[,3],mb1$U[,3])
> abline(0,1,col="red")
> pred1 <- predict(mb1)
Error in UseMethod("predict") : 
  no applicable method for 'predict' applied to an object of class "list"
Calls: predict
Execution halted
